models.py   # BASE DE DADOS ...
views.py    # FISICO DO SITE BACKEND

Na pasta templates é onde fica o codigo html, no django vc só passa o nome do arquivo tipo(index.html) e ele procura lá
settings.py:

    INSTALLED_APPS = [
        "django.contrib.admin",
        "django.contrib.auth",
        "django.contrib.contenttypes",
        "django.contrib.sessions",
        "django.contrib.messages",
        "django.contrib.staticfiles",
        # NOSSO APP:
>       "recipes"  <<<<<<<<<< adicionar nossa pasta do app (assim ele encontra os caminhos durante a criação do pgm)
    ]
    ...
    ...
    TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [   BASE_DIR / "caminhho__(like: base_templates)"  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
        ],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                ],
            },
        },
    ]
    ...
    ...
>   # PLURAL DE PASTAS COM ARQUIVOS ESTATICOS (ARQUIVOS ESTATICOS SERVEM PARA OTIMIZAR OS REQUEST AO SERVIDOR
    STATIC_FILES_DIRS = [
    BASE_DIR / 'pasta_static',

    ]

    STATIC_ROOT = BASE_DIR / 'static'
>   # STATIC_ROOT serve pra usar o comando  " python manage.py collectstatic " que serve para deploy dos arquivos no servidor
>   # EM urls.py :add >>>urlpatterns += static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)

>   # MEDIA URL E MEDIA ROOT SERVEM PARA DEFINIR ONDE SERA SALVO AO ARQUIVOS QUE OS USUARIOS ADICIONAREM
>   # EM urls.py :add >>>from django.conf import settings
>   # EM urls.py :add >>>urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)
    MEDIA_URL = '/media/'
    MEDIA_ROOT = BASE_DIR / 'media'